/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package objectguimas;

import java.awt.Color;
import java.awt.Graphics;

/**
 *
 * @author Angelica Guerrero
 */
public class GraficoPanel extends javax.swing.JPanel {
  private double[][] puntos;
    private double[][] centroides;

    public GraficoPanel(double[][] puntos, double[][] centroides) {
        this.puntos = puntos;
        this.centroides = centroides;
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);

        // Obtener el centro del panel
        int centerX = getWidth() / 2;
        int centerY = getHeight() / 2;

        // Dibujar la cuadrícula con el origen en el centro del panel
        g.setColor(Color.LIGHT_GRAY);
        for (int i = -centerX; i <= centerX; i += 50) {
            g.drawLine(centerX + i, 0, centerX + i, getHeight());
        }
        for (int j = -centerY; j <= centerY; j += 50) {
            g.drawLine(0, centerY - j, getWidth(), centerY - j);
        }

        // Dibujar el eje X y el eje Y en el centro
        g.setColor(Color.BLACK);
        g.drawLine(centerX, 0, centerX, getHeight()); // Eje Y
        g.drawLine(0, centerY, getWidth(), centerY);  // Eje X

        // Dibujar los números de la cuadrícula en el eje X
        for (int i = -centerX / 50; i <= centerX / 50; i++) {
            g.drawString(Integer.toString(i), centerX + i * 50, centerY + 15);
        }

        // Dibujar los números de la cuadrícula en el eje Y
        for (int j = -centerY / 50; j <= centerY / 50; j++) {
            g.drawString(Integer.toString(-j), centerX + 5, centerY - j * 50 + 5);
        }

        // Dibujar los puntos en azul
        g.setColor(Color.BLUE);
        for (double[] punto : puntos) {
            int x = (int) (centerX + punto[0] * 50);
            int y = (int) (centerY - punto[1] * 50); // Invertir el eje Y
            g.fillOval(x - 4, y - 4, 8, 8);
            g.drawString("(" + punto[0] + ", " + punto[1] + ")", x + 5, y - 5);
        }

        // Dibujar los centroides en rojo
        g.setColor(Color.RED);
        for (double[] centroide : centroides) {
            int x = (int) (centerX + centroide[0] * 50);
            int y = (int) (centerY - centroide[1] * 50); // Invertir el eje Y
            g.fillOval(x - 5, y - 5, 10, 10);
            g.drawString("(" + centroide[0] + ", " + centroide[1] + ")", x + 5, y - 5);
        }
    }
   
    
    /**
     * Creates new form GraficoPanel
     */
    public GraficoPanel() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 456, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 348, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
